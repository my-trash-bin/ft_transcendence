generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model MainUser {
  id              String  @id @default(uuid()) @db.Uuid
  authUserId      String  @unique @db.Uuid
  nickname        String  @unique
  profileImageUrl String?

  following     UserFollow[]      @relation("UserFollow_follower")
  followedBy    UserFollow[]      @relation("UserFollow_followee")
  achievements  UserAchievement[] @relation("UserAchievement_user")
  notifications Notification[]    @relation("Notifications_user")
}

model UserFollow {
  followerId        String   @db.Uuid
  followeeId        String   @db.Uuid
  isBlock           Boolean
  followOrBlockedAt DateTime @updatedAt

  follower MainUser @relation("UserFollow_follower", fields: [followerId], references: [id])
  followee MainUser @relation("UserFollow_followee", fields: [followeeId], references: [id])

  @@id([followerId, followeeId])
  @@index([followerId, isBlock, followOrBlockedAt])
}

model Achievement {
  id          String @id @default(uuid()) @db.Uuid
  title       String
  imageUrl    String
  description String

  achievedUsers UserAchievement[] @relation("UserAchievement_achievement")
}

model UserAchievement {
  userId        String   @db.Uuid
  achievementId String   @db.Uuid
  achievedAt    DateTime @default(now())

  user        MainUser    @relation("UserAchievement_user", fields: [userId], references: [id])
  achievement Achievement @relation("UserAchievement_achievement", fields: [achievementId], references: [id])

  @@id([userId, achievementId])
  @@index([userId, achievedAt])
  @@index([achievementId, achievedAt])
}

model Notification {
  id          String   @id @default(uuid()) @db.Uuid
  userId      String   @db.Uuid
  isRead      Boolean  @default(false)
  createdAt   DateTime @default(now())
  contentJson String

  user MainUser @relation("Notifications_user", fields: [userId], references: [id])

  @@index([userId, createdAt])
}
