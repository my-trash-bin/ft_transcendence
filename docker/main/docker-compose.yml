version: '3'

networks:
  ft_transcendence:

services:
  http:
    build:
      context: .
      dockerfile: http.Dockerfile
    image: ft_transcendence-http-production
    ports:
      - 8080:80
    depends_on:
      - backend
      - frontend
    networks:
      - ft_transcendence
    restart: always
  backend:
    build:
      context: ../..
      dockerfile: docker/main/backend.Dockerfile
    image: ft_transcendence-backend-production
    depends_on:
      - db
      - redis
      - azurite
    volumes:
      - ./volume/redis:/data
    networks:
      - ft_transcendence
    env_file:
      - ../../.env
    restart: always
  frontend:
    build:
      context: ../..
      dockerfile: docker/main/frontend.Dockerfile
    image: ft_transcendence-frontend-production
    networks:
      - ft_transcendence
    env_file:
      - ../../.env
    restart: always
  db:
    image: postgres
    environment:
      POSTGRES_USER: kiwi
      POSTGRES_PASSWORD: kiwipassword
    networks:
      - ft_transcendence
    volumes:
      - ./volume/db:/var/lib/postgresql/data
    restart: always
  redis:
    image: redis/redis-stack-server
    environment:
      # use REDIS_ARGS for redis-stack-server instead of command arguments
      - REDIS_ARGS=--save 1200 32
    volumes:
      - ./volume/redis:/data
    networks:
      - ft_transcendence
    restart: always
  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    command: "azurite --loose --blobHost 0.0.0.0 --blobPort 10000 --queueHost 0.0.0.0 --queuePort 10001 --tableHost 0.0.0.0 --tablePort 10002 --location /workspace --debug /workspace/debug.log"
    ports:
      - 10000:10000
      - 10001:10001
      - 10002:10002
    volumes:
      - ./volume/azurite:/workspace
    networks:
      - ft_transcendence
    restart: always
